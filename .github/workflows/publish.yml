name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v0.4.0, etc.
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run tests
      run: uv run pytest tests/ -v

  publish:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write  # Required for trusted publishing
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install build dependencies
      run: |
        uv sync
        uv pip install build
    
    - name: Build package
      run: uv run python -m build
    
    # Retry mechanism for PyPI publishing to handle Rekor server issues
    - name: Publish to PyPI (attempt 1)
      id: publish_attempt_1
      continue-on-error: true
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        skip-existing: true
        attestations: true  # Enable attestations but allow fallback
    
    - name: Wait before retry (if first attempt failed)
      if: steps.publish_attempt_1.outcome == 'failure'
      run: |
        echo "First attempt failed, waiting 60 seconds before retry..."
        sleep 60
    
    - name: Publish to PyPI (attempt 2)
      id: publish_attempt_2
      if: steps.publish_attempt_1.outcome == 'failure'
      continue-on-error: true
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        skip-existing: true
        attestations: true
    
    - name: Wait before final retry (if second attempt failed)
      if: steps.publish_attempt_1.outcome == 'failure' && steps.publish_attempt_2.outcome == 'failure'
      run: |
        echo "Second attempt failed, waiting 120 seconds before final retry..."
        sleep 120
    
    - name: Publish to PyPI (final attempt)
      if: steps.publish_attempt_1.outcome == 'failure' && steps.publish_attempt_2.outcome == 'failure'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        skip-existing: true
        attestations: false  # Disable attestations on final attempt to avoid Rekor issues

  create-release:
    needs: publish
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Extract changelog
      id: changelog
      run: |
        VERSION="${{ steps.tag.outputs.tag }}"
        echo "Creating release for $VERSION"
        echo "changes=Released $VERSION with critical bug fixes and enhanced documentation. See CHANGELOG.md for full details." >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release (with retries)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 3
        retry_wait_seconds: 15
        command: |
          gh release create ${{ steps.tag.outputs.tag }} \
            --title "Release ${{ steps.tag.outputs.tag }}" \
            --notes "${{ steps.changelog.outputs.changes }}" \
            --latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 